// Code generated by adder. DO NOT EDIT.

package generated

import (
	"github.com/jrschumacher/adder"
	"github.com/spf13/cobra"
)

// AdderRequestPersistentFlags represents the persistent flags for the adder command
type AdderRequestPersistentFlags struct {
	Verbose bool `json:"verbose"` // Enable verbose output for debugging and CI
	Quiet   bool `json:"quiet"`   // Suppress all output except errors
}

// AdderRequest represents the parameters for the adder command
type AdderRequest struct {
	PersistentFlags AdderRequestPersistentFlags `json:"persistent_flags"`
	RawArguments    []string                    `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// GetRawArguments implements the adder.Request interface
func (r *AdderRequest) GetRawArguments() []string {
	return r.RawArguments
}

// Ensure AdderRequest implements adder.Request interface at compile time
var _ adder.Request = (*AdderRequest)(nil)

// AdderHandler defines the function type for handling adder commands
type AdderHandler func(cmd *cobra.Command, req *AdderRequest) error

// NewAdderCommand creates a new adder command with the provided handler function
func NewAdderCommand(handler AdderHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:   "adder",
		Short: "A documentation-driven CLI generator",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runAdder(cmd, args, handler)
		},
	}

	// Register persistent flags
	cmd.PersistentFlags().BoolP("verbose", "v", false, "Enable verbose output for debugging and CI")
	cmd.PersistentFlags().BoolP("quiet", "q", false, "Suppress all output except errors")

	// Register flags

	return cmd
}

// runAdder handles argument and flag extraction
func runAdder(cmd *cobra.Command, args []string, handler AdderHandler) error {
	verbose, _ := cmd.PersistentFlags().GetBool("verbose")
	quiet, _ := cmd.PersistentFlags().GetBool("quiet")

	// Create request
	req := &AdderRequest{
		PersistentFlags: AdderRequestPersistentFlags{
			Verbose: verbose,
			Quiet:   quiet,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
