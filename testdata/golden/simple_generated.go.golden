// Code generated by adder. DO NOT EDIT.

package testpkg

import (
	
	"github.com/spf13/cobra"
)

// SimpleRequestFlags represents the flags for the simple command
type SimpleRequestFlags struct {
	Flag string `json:"flag"` // A simple flag
}

// SimpleRequest represents the parameters for the simple command
type SimpleRequest struct {
	Flags SimpleRequestFlags `json:"flags"`
}

// SimpleHandler defines the interface for handling simple commands
type SimpleHandler interface {
	HandleSimple(cmd *cobra.Command, req *SimpleRequest) error
}

// NewSimpleCommand creates a new simple command with the provided handler
func NewSimpleCommand(handler SimpleHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "simple",
		Short:   "Simple Test Command",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runSimple(cmd, args, handler)
		},
	}

	// Register flags
	cmd.Flags().String("flag", "", "A simple flag")

	return cmd
}

// runSimple handles argument and flag extraction
func runSimple(cmd *cobra.Command, args []string, handler SimpleHandler) error {
	flag, _ := cmd.Flags().GetString("flag")

	// Create request
	req := &SimpleRequest{
		Flags: SimpleRequestFlags{
			Flag: flag,
		},
	}

	// Call handler
	return handler.HandleSimple(cmd, req)
}
